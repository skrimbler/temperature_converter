#!/usr/bin/env ruby
require './lib/temperature_converter_nielsvanvlaenderen'
require 'net/http'
require 'uri'
require 'optparse'

# cmdl_input = ARGV[0]
# file_path = "file.txt"
# url_path = "http://labict.be/software-engineering/temperature/api/temperature/fake"

# converter = TemperatureConverter.new
#
# options = {}
# OptionParser.new do |opts|
#   opts.banner = "Usage: ruby app.rb [options]"
#
#   opts.on("-t temperature", "--temperature temperature", "Input temperature") do |temerature|
#     converter.commandline_temperature temperature
#   end
#
#   opts.on("-f file", "--file file" , "Input path to temperature file") do |file|
#     converter.file_temperature file
#   end
#
#   opts.on("-u url", "--url url", "Input URL to temperature") do |url|
#     converter.url_temperature url
#     end
#
#   opts.on("-m", "--mqtt", "Input Mqtt") do |mqtt|
#     converter.mqtt_reader mqtt
#   end
#
#   opts.on("--text" , "Output as text") do |text|
#     puts converter.to_text
#   end
#
#   opts.on("--html", "Output as HTML") do |html|
#     puts converter.to_html
#   end
#
#   opts.on("--json", "Output as JSON") do |json|
#     puts converter.to_json
#   end
#
# end.parse!


OptionParser.new do |opts|
  opts.banner = "Usage: ruby app.rb [options]"

  opts.on("-t [FLOAT]","--temperature [FLOAT]",Float,"Give number to convert") do |t|
    @newt = Celsius.new(t).normal
    @newf = Fahrenheit.new(@newt).ctof
    @newk = Kelvin.new(@newt).ctok
  end
  opts.on("-f","--file","convert from file") do |f|
    @newt =Celsius.file_temperature
    @newf = Fahrenheit.new(@newt).ctof
    @newk = Kelvin.new(@newt).ctok

  end
  opts.on("-u","--url","convert from url") do |u|
    @newt =Celsius.url_temperature ("http://labict.be/software-engineering/temperature/api/temperature/fake")
    @newf = Fahrenheit.new(@newt).ctof
    @newk = Kelvin.new(@newt).ctok
  end

  opts.on("-c","--cmd","give output in plain text") do |c|
  puts Screen.new(@newt,@newf,@newk).to_text
  end

  opts.on("-j","--json","give output in JSON string") do |j|
  puts Screen.new(@newt,@newf,@newk).to_json
  end

  opts.on("-h","--html","give output in html format") do |h|
  puts Screen.new(@newt,@newf,@newk).to_html
  end
end.parse!
